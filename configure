#! /bin/sh

PROGNAME="$(basename "$0")"
HOME=/tmp/x

usage() {
    printf "Usage: %s [-u]" "$PROGNAME" >&2
    exit 1
}

log() {
    printf "%s: %s\n" "$PROGNAME" "$@"
}

error() {
    printf "%s: %s\n" "$PROGNAME" "$@"
    exit 1
}

INSTALLOP=install
while getopts "u" o; do
    case "${o}" in
        u)  INSTALLOP=uninstall   ;;
        *)  usage                 ;;
    esac
done
shift $((OPTIND-1))

HERE="$(cd "$(dirname "$0")" && pwd)"
INSTALL=${INSTALL:-install}
SYS="$(uname)"

#
# Check
#
case "$SYS" in
    Linux)
        if [ "$(stat -c %d "$HOME")" -ne "$(stat -c %d "$HERE")" ]
        then
            error repo needs to install in the same file system
        fi
        getInode() { stat -c %i "$1" 2>&- ; }
        ;;
    Darwin)
        if [ "$(stat -f %d "$HOME")" -ne "$(stat -f %d "$HERE")" ]
        then
            error repo needs to install in the same file system
        fi
        getInode() { stat -f %i "$1" 2>&- ; }
        ;;
    *)
        error "Unknown system $SYS"
        ;;
esac

install() {
    test -e "$2" && mv "$2" "$2".ORIG

    if [ -d "$1" ] ; then
        ln -s -f "$1" "$2"
    else
        ln -f "$1" "$2"
    fi
    log "link $2 to $1"
}

uninstall() {
    if { [ -f "$2" ] && [ "$(getInode "$2")" = "$(getInode "$1")"  ] ; } ||
       { [ -d "$2" ] && [ "$(readlink "$2")" = "$1" ] ; }
    then
        rm -f "$2"
        if [ -e "$2".ORIG ] ; then
            mv "$2".ORIG "$2"
        fi
        log "unlink $2 from $1"
    fi
}

#
# make shellcheck happy
#
install   "$HERE"/no-op "$HOME"/.no-op
uninstall "$HERE"/no-op "$HOME"/.no-op

#
# Protect the repo first
#
pre-commit install --install-hooks

#
# dotFiles
#
for i in ./dot.* ; do
    test ! -e "$i" && break
    ${INSTALLOP} "$HERE"/"$i" "$HOME"/"${i/dot/}"
done

#
# dot file Initializers
#
case "$INSTALLOP" in
    install)
        printf '(defconst emacs-rc-dir "%s/emacs")\n' "$HERE" >"$HOME/.emacs-rc-dir.el"

        {
            printf 'export ZDOTDIR="%s";\n'   "${ZDOTDIR:="$HOME"}"

            # shellcheck disable=SC2016
            printf 'export ZDOTDIR_LOCAL="${ZDOTDIR_LOCAL:-"%s"}";\n' \
                   "${HERE}/zshell"

            printf 'setopt NO_NOMATCH;'
        } > "$HOME/.zinit"
        ;;

    uninstall)
        rm -f  "$HOME"/.emacs-rc-dir.el "$HOME"/.zinit
        ;;
esac

#
# Fonts
#
case "$SYS" in
    Linux)
        ${INSTALLOP} "$HERE"/fonts "$HOME"/.fonts
        sudo fc-cache -f -v
        ;;
    Darwin)
        FCDIR="$HOME"/Library/Fonts
        for i in "$HERE"/fonts/*/*.ttf
        do
            if [ ! -f "$i" ]
            then
                break
            fi
            ${INSTALLOP} "$i" "$FCDIR"/"$(basename "$i")"
        done
        ;;
esac

#
# binaries
#
mkdir -p "$HOME"/bin
for i in "$HERE"/bin/*
do
    ${INSTALLOP} "$i" "$HOME"/bin/"$(basename "$i")"
done

exit
