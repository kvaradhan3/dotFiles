#! /bin/zsh
#

CMD="${funcstack[2]:-"${FUNCNAME[2]}"}"
OPT="$(echo ${funcstack[1]:-"${FUNCNAME[1]}"} | sed 's/.*_\([^_]*\)/\1/'"

if (( $@[(I)--help] )) || (( $@[(I)-h] ))
then
    sed 's/^#/ /'  <<USAGE >&2

# usage: "$CMD" "$OPT"
#
#        List machines that match the arg spec. 
#
# Example searches include:
#
#   $CMD $OPT --mine             # find devboxes owned by $USER
#   $CMD $OPT --search ...       # use tsh ls to search on attributes...
#   $CMD $OPT ip_private=1.1.1.1 # search by a specific attribute.  but then
#   $CMD $OPT --search 1.1.1.1   # also would work...
#   $CMD $OPT 1.1.1.1            # for a single attr search, this also works...
#
#   If no hosts match, an error message is printed.
#
# Outputs a csv format list that can be run through csvlook,
# in the csvkit package.
#
USAGE
    return
fi

emulate -L zsh -o pipe_fail -o err_return

case $(tsh ls --format=json "$@" 2>&- | jq length) in
'')
    echo "$CMD $OPT: unknown error" $(tsh ls --format=json "$@" 2>&1)
    ;;
0)
    echo "$CMD $OPT: No host matched for criteria:" "$@" >&2
    ;;
*)
    print "hostname,Private IP,instance-id,HW Type,expiry";
    tsh ls --format=json "$@"                | \
        jq -r '.[]
               | [ .spec.hostname,
                   ( .spec.cmd_labels |
                       .ip_private.result,
                       .aws_instance_id.result,
                       .hwtype.result[:7]
                   ),
                   .metadata.expires[:10]
                 ]
               | @csv'
    ;;
esac
