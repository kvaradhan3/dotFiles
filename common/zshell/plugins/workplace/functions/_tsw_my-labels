#! /usr/bin/env bash
#

CMD="${funcstack[2]:-"${FUNCNAME[2]}"}"
OPT="$(echo ${funcstack[1]:-"${FUNCNAME[1]}"} | sed 's/.*_\([^_]*\)/\1/'"

if (( $@[(I)--help] )) || (( $@[(I)-h] ))
then
    sed 's/^#/ /'  <<USAGE >&2

# usage: "$CMD" "$OPT"
#
# list the labels affixed to machines that I am designated as owner.
#
# Example searches include:
#
#   $CMD $OPT --mine               # find devboxes owned by $USER
#   $CMD $OPT --search ...         # use tsh ls search on attributes...
#   $CMD $OPT ip_private=1.1.1.1   # search by a specific attribute.  but then
#   $CMD $OPT --search 1.1.1.1     # also would work...
#   $CMD $OPT 1.1.1.1              # for a single attr search, this also works..
#
#   If no hosts match, an error message is printed
#
#   $CMD $OPT              # prints labels on all devboxes owned by $USER
#
#
USAGE
    return
fi

emulate -L zsh -o pipe_fail -o err_return

##
# 0. With no arguments, add a devbox owner label as default.
if [[ $# == 0 ]] ; then
    set -- "aws/Owner=$USER@zscaler.com"
fi

case $(tsh ls --format=json "$@" 2>&- | jq length) in
'')
    echo "$CMD $OPT: unknown error" $(tsh ls --format=json "$@" 2>&1)
    ;;
0)
    echo "$CMD $OPT: No host matched for criteria:" "$@" >&2
    ;;
*)
    tsh ls --format=json "$@"                  | \
    jq --raw-output '.[] 
                    | .metadata.labels
                    + (
                    .spec.cmd_labels
                    | .[]
                    |= .result
                    )'
    ;;
esac

