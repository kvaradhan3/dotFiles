#! /bin/zsh
#

CMD="${funcstack[2]:-"${FUNCNAME[2]}"}"
OPT="$(echo ${funcstack[1]:-"${FUNCNAME[1]}"} | sed 's/.*_\([^_]*\)/\1/')"

if (( $@[(I)--help] )) || (( $@[(I)-h] ))
then
    sed 's/^#/ /'  <<USAGE >&2

# usage: $CMD $OPT [--mine | <tsh options> | search-attribute]
#
#        Find a host(s) to ssh into.
#
# Example searches include:
#
#   $CMD $OPT --mine             # find devboxes owned by \$USER
#   $CMD $OPT --search ...       # use tsh ls search on attributes...
#   $CMD $OPT ip_private=1.1.1.1 # search by a specific attribute.  but then
#   $CMD $OPT --search 1.1.1.1   # also would work...
#   $CMD $OPT 1.1.1.1            # for a single attr search, this also works.
#
#   If no hosts match, an error message is printed.
#   if more than one host matches, we use fzf to allow the user to pick
#   from the matched criteria.
#
#   $CMD $OPT                    # is short form to search/pick
#                                # among all available hosts.
#
USAGE
    return
fi

emulate -L zsh -o pipe_fail -o err_return

if [[ $(tsh ls --format=json "$@"  2>&- | jq length) = 1 ]] ; then
    tsh ssh $(tsh ls --format=json "$@" | jq -r '.[].spec.hostname')
else
    tsh ssh $(tsh ls --format=json "$@"                  | \
              jq -r '.[].spec.hostname'                  | \
              fzf --preview="tsh ls --format=json --search {} | \
                             jq -C '.[]
                                    | .metadata.labels
                                      + ( .spec.cmd_labels
                                          | .[]
                                          |= .result
                                        )'"
    )
fi
