#! /bin/zsh
#
# shellcheck disable=SC2278,SC2298,SC2296,SC2299
# SC2086 (info): Double quote to prevent globbing and word splitting.
# SC2296 (error): Parameter expansions can't start with (. Double check syntax.
# SC2298 (error): ${${x}} is invalid. For expansion, use ${x}.
#        For indirection, use arrays, ${!x} or (for sh) eval.
# SC2278 (error): $0 can't be assigned in Ksh (but it does reflect the current function).
# SC2299 (error): Parameter expansions can't be nested. Use temporary variables.
#

zmodload zsh/zprof
zprof -c
autoload -Uz compinit
local ___START=$SECONDS
# From https://gist.github.com/ctechols/ca1035271ad134841284#gistcomment-2308206
# shellcheck disable=SC1072,SC1073
() {
  if [[ $# -gt 0 ]]; then
    compinit && zcompile ${ZDOTDIR:-$HOME}/.zcompdump
  else
    compinit -C
  fi
  if [[ ! -f ~/.zcompdump.zwc             ]] ||     \
     [[ ~/.zcompdump -nt ~/.zcompdump.zwc ]] ;  then
      zcompile ${ZDOTDIR:-$HOME}/.zcompdump
  fi
} ${ZDOTDIR:-$HOME}/.zcompdump.zwc(N.mh+24)
prtiming ">_zcompdump" $___START

zstyle ':antidote:bundle' use-friendly-names 'yes'
for _25i in /usr/local/opt/antidote                    \
         /usr/share/zsh-antidote                    \
         /opt/homebrew/opt/antidote/share/antidote  \
         FAIL
do
    if [[ -d "$_25i" ]] ; then
        source "$_25i/antidote.zsh"
        break
    fi
done
if [[ $_25i = FAIL ]] ; then
    # unwarranted chumminess alert here...
    echo 'antidote not found' >&2
fi

# Initialize a few things that OMZ did for you nicely...
ZSH_CACHE_DIR="$(dirname "$(antidote home)")"/zshell

# ensure completions dir
mkdir -p "$ZSH_CACHE_DIR"/completions

(( ${fpath[(Ie)"$ZSH_CACHE_DIR/completions"]} )) || \
    fpath=("$ZSH_CACHE_DIR/completions" "${fpath[@]}")

# source <(antibody init)

if ! [[ -f ~/.zsh_plugins.zsh ]] ||
   ! antidote path ohmyzsh/ohmyzsh >/dev/null 2>&1
then
    antidote bundle <<PLUGINS_LIST >~/.zsh_plugins.zsh
        ohmyzsh/ohmyzsh path:lib/git.zsh
        ohmyzsh/ohmyzsh path:lib/correction.zsh
        ohmyzsh/ohmyzsh path:lib/completion.zsh
        ohmyzsh/ohmyzsh path:lib/compfix.zsh

        ohmyzsh/ohmyzsh path:plugins/git
        ohmyzsh/ohmyzsh path:plugins/brew
	ohmyzsh/ohmyzsh path:plugins/gh
        # ohmyzsh/ohmyzsh path:plugins/aws
        # ohmyzsh/ohmyzsh path:plugins/gcloud
        ohmyzsh/ohmyzsh path:plugins/tmux
        ohmyzsh/ohmyzsh path:plugins/docker
        # ohmyzsh/ohmyzsh path:plugins/vagrant
        ohmyzsh/ohmyzsh path:plugins/chucknorris
        ohmyzsh/ohmyzsh path:plugins/helm
        ohmyzsh/ohmyzsh path:plugins/kubectl

        wting/autojump  path:bin/autojump.zsh
        atuinsh/atuin

        zsh-users/zsh-completions
        zsh-users/zsh-autosuggestions
        zsh-users/zsh-syntax-highlighting
        zsh-users/zsh-history-substring-search

        kvaradhan3/dotFiles path:common/zshell/plugins/workplace  branch:darwin-work-updates
        # kvaradhan3/dotFiles path:common/zshell/plugins/nskc
        kvaradhan3/dotFiles path:common/zshell/plugins/batteryCharge
        kvaradhan3/dotFiles path:common/zshell/plugins/1p
        kvaradhan3/dotFiles path:common/zshell/plugins/emulators
        kvaradhan3/dotFiles path:common/zshell/plugins/log

        bigH/git-fuzzy      path:bin kind:path
        wfxr/forgit
        sindresorhus/pure   kind:fpath
PLUGINS_LIST
fi

_START="$SECONDS"

#shellcheck source=/Users/kvaradhan/.zsh_plugins.zsh
source ~/.zsh_plugins.zsh
prtiming " >_s_plugins"	"$_START"

_START="$SECONDS"
# shellcheck source=/Users/kvaradhan/.gitsy.zsh-theme
# source "${0:h}"/themes/gitsy.zsh-theme
source "${0:h}"/themes/pure.zsh-theme
prtiming " >_s_pure"	"$_START"

# shellcheck disable=SC2034
COMPLETION_WAITING_DOTS="true" # used in lib/completion.zsh
zprof
zmodload -ui zsh/zprof
