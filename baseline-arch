#! /bin/zsh -x

set -eu

#
# Prep Steps:
#
# Partitions:
# - EFI 1G
# - /   128G
# - /var 128G
# - /home 512G
# - /data rest (162.5G)
# 
# On boot, link:
# iwctl
# # station wlan0 scan
# # station wlan0 get-networks
# # station wlan0 connect "idli vadai sambhar"
# 
# timedatectl
# 
# format all partitions and mount them
# 
# # mkfs.fat -F 32 /dev/efi_system_partition
# # mkfs.ext4 /dev/root_partition
# 
# # dd if=/dev/zero of=/swapfile bs=1M count=8k status=progress
# # chmod 0600 /swapfile
# # mkswap -U clear /swapfile
# # swapon /swapfile
# 
# # mount --mkdir /dev/efi_system_partition /mnt/boot
# 
# 
# BASE INSTALL
# # pacstrap -K /mnt base linux linux-firmware git sudo refind iwd zsh
# 
# # genfstab -U /mnt >> /mnt/etc/fstab
# # arch-chroot /mnt
# # ln -sf /usr/share/zoneinfo/Region/City /etc/localtime
# # hwclock --systohc
# 
# refind-install
# echo {{hostname}} > /etc/hostname
# passwd root
# 
# : For AUR :
# groupadd pacman
# useradd --base-dir /home \
#         --home-dir /home/kannan \
#         --create-home \
#         --comment 'Kannan Varadhan' \
#         --groups pacman,wheel \
#         --shell /bin/zsh \
#    kannan
#
# git clone https://github.com/kvaradhan3/dotFiles.git /home/kannan/sysinit
#
# --- /etc/security/faillock.bak	2023-08-29 20:51:41.409772012 -0700
# +++ /etc/security/faillock.conf	2023-08-29 20:51:28.313105617 -0700
# @@ -29,7 +29,7 @@
#  # Deny access if the number of consecutive authentication failures
#  # for this user during the recent interval exceeds n tries.
#  # The default is 3.
# -# deny = 3
# +deny = 30
#  #
#  # The length of the interval during which the consecutive
#  # authentication failures must happen for the user account
# 
# swapoff -a
# cd /
# umount -R /mnt
# reboot
#

#
# Things that shoudl work with sway/wayland but dont seem to:
#
# - zoom
# - 1password
#
####
#
# Upgrade live system
#
WIFI_SSID='idli vadai sambhar'

block_exists_in_file() {
    grep -E "$1" "$2" >/dev/null 2>&-
}

add_block_to() {
    FILE=$1
    shift

    for i in "$@" ; do
        echo "$i" 
    done | sudo tee -a "$FILE" >/dev/null 2>&1
}


##
#
# Base Network
#

echo 'Network'
sudo mkdir -p /etc/iwd
if ! block_exists_in_file '^# INIT:' /etc/iwd/main.conf ; then
    add_block_to /etc/iwd/main.conf          \
        "# INIT: $(date) #"                  \
        "[General]"                          \
        "EnableNetworkConfiguration=true"    \
        ""                                   \
        "[Network]"                          \
        "NameResolvingService=systemd"       \
        ""
fi

sudo iwctl station wlan0 connect "$WIFI_SSID"
sudo systemctl start  iwd.service
sudo systemctl enable iwd.service
sudo systemctl start  systemd-resolved.service
sudo systemctl enable systemd-resolved.service

if ! block_exists_in_file '^\[AUR]$' /etc/pacman.conf ; then
    echo 'bootstrap AUR'
    add_block_to /etc/pacman.conf          \
        ''                                 \
        '[AUR]'                            \
        'SigLevel = Optional TrustAll'     \
        'Server = file:///var/pacman/AUR'

    sudo mkdir -p /var/pacman/AUR
    sudo chmod -R 02770  /var/pacman
    sudo chgrp -R pacman /var/pacman

    repo-add /var/pacman/AUR/AUR.db.tar.xz 
    pac_install base-devel

    git clone https://github.com/AladW/aurutils /tmp/aurutils
    cd /tmp/aurutils
    makepkg --install --syncdeps --asdeps --needed --noconfirm 
    rm -rf /tmp/aurutils

    sudo pacman -Syu --noconfirm --needed pacman_contrib
fi

export AURDEST=/var/pacman/packages
export AUR_PACMAN_AUTH="sudo --askpass"
export AUR_REPO=AUR

aur sync --no-view --no-confirm aurutils
sudo pacman -S --noconfirm --needed --overwrite '*' aurutils

curl -sS https://downloads.1password.com/linux/keys/1password.asc | gpg --import

#
# fetch/upgrade aurutils.   This list is generated using:
# 
#    % paclist AUR
#

while read pkg ver ; do
    aur sync --no-view --no-confirm $pkg
done <<- "AURLIST"
    1password-beta 8.10.26_11.BETA-11
    1password-cli 2.24.0-2
    aurutils 18.5-1
    autojump 22.5.3-9
    google-cloud-cli 462.0.1-1
    hw-probe 1.6.5-1
    laptop-mode-tools 1.74-1
    ltunify 0.3-1
    python-fangfrisch 1.7.0-1
    ttf-meslo 1.2.1-3
    ttf-monaco 6.1-7
    vlc-git 4.0.0.r27536.g051c1c067e-1
    zsh-antidote 1.9.4-1
AURLIST
    # vlc-pause-click-plugin 2.2.0-1

while read pkg ver ; do
    sudo pacman -S --noconfirm --needed $pkg
done <<- "PACLIST"
    1password-beta 8.10.26_11.BETA-11
    1password-cli 2.24.0-2
    adobe-source-sans-fonts 3.052-1
    alsa-plugins 1:1.2.7.1-2
    alsa-utils 1.2.10-1
    archlinux-contrib 20221211-2
    aurutils 18.5-1
    autojump 22.5.3-9
    bandwhich 0.22.2-1
    base 3-2
    base-devel 1-1
    bc 1.07.1-4
    bind 9.18.21-1
    bluez 5.72-2
    bluez-utils 5.72-2
    clamav 1.2.1-1
    cowsay 3.04-4
    cups 1:2.4.7-2
    cups-pdf 3.0.1-7
    dbus-python 1.3.2-2
    docker 1:24.0.7-1
    docker-compose 2.24.5-1
    electron25 25.9.8-1
    emacs-wayland 29.2-1
    ethtool 1:6.5-1
    firefox 122.0-1
    firefox-developer-edition 123.0b6-1
    foot 1.16.2-2
    fortune-mod 3.20.0-1
    fprintd 1.94.2-2
    fzf 0.46.1-1
    gd 2.3.3-7
    git 2.43.0-1
    github-cli 2.43.1-1
    glfw-wayland 3.3.9-1
    google-cloud-cli 462.0.1-1
    gpick 0.3-1
    hdparm 9.65-1
    htop 3.3.0-1
    hw-probe 1.6.5-1
    iw 6.7-1
    iwd 2.13-4
    jq 1.7.1-1
    kubectl 1.29.1-1
    laptop-detect 0.16-1
    laptop-mode-tools 1.74-1
    linux 6.7.3.arch1-1
    linux-firmware 20240115.9b6d0b08-2
    ltunify 0.3-1
    lvm2 2.03.23-1
    lynx 2.8.9-7
    man-db 2.12.0-1
    mate-control-center 1.26.1-1
    mupdf 1.23.9-4
    neofetch 7.1.0-2
    nethack 3.6.7-5
    nethogs 0.8.7-1
    netsniff-ng 0.6.8-6
    nss-mdns 0.15.1-1
    oniguruma 6.9.9-1
    opendoas 6.8.2-1
    openresolv 3.13.2-2
    openssh 9.6p1-1
    otf-font-awesome 6.5.1-1
    pacman-contrib 1.10.4-1
    pacutils 0.11.1-1
    pipewire-alsa 1:1.0.3-1
    pipewire-pulse 1:1.0.3-1
    pkgfile 21-2
    pre-commit 3.6.0-1
    python-docutils 1:0.20.1-1
    python-fangfrisch 1.7.0-1
    qpwgraph 0.6.2-1
    qt5-wayland 5.15.12+kde+r61-1
    qt6-wayland 6.6.1-1
    ranger 1.9.3-9
    rsync 3.2.7-6
    shellcheck 0.9.0-78
    smartmontools 7.4-1
    sof-firmware 2023.12-1
    speedtest-cli 2.1.3-7
    sudo 1.9.15.p5-1
    sway 1:1.8.1-5
    swaybg 1.2.0-1
    swayidle 1.8.0-1
    swaylock 1.7.2-1
    tmux 3.3_a-7
    ttf-anonymous-pro 1.003-7
    ttf-inconsolata-nerd 3.1.1-1
    ttf-meslo 1.2.1-3
    ttf-monaco 6.1-7
    ttf-nerd-fonts-symbols-common 3.1.1-1
    ttf-nerd-fonts-symbols-mono 3.1.1-1
    udisks2 2.10.1-2
    usbutils 017-1
    vim 9.1.0000-1
    vlc-git 4.0.0.r23113.gf7bb59d9f5-1
    waybar 0.9.24-3
    wayland-protocols 1.33-1
    weston 13.0.0-1
    wev 1.0.0-13
    wl-clipboard 1:2.2.1-1
    wofi 1.3-2
    xl2tpd 1.3.18-1
    xorg-xeyes 1.3.0-1
    xorg-xlsclients 1.1.5-1
    xorg-xwayland 23.2.4-2
    xpdf 4.04-2
    yt-dlp 2023.12.30-1
    zsh 5.9-4
    zsh-antidote 1.9.4-1
PACLIST
    # vlc-pause-click-plugin 2.2.1kva-1

sudo systemctl start  docker.service
sudo systemctl enable docker.service
sudo usermod --append		        \
             --groups docker		\
	     $USER

# pac_install kubeadm
##
## https://wiki.archlinux.org/title/Kubernetes
##
# aur_install etcd
# pac_install etcd
# pac_install kubernetes-control-plane # includes kubernetes-node
#
# pac_install containerd
# {
#     add_block_to /etc/modules-load.d/k8s.conf \
#         "# INIT: $(date) #"                   \
#         'overlay'                             \
#         'br_netfilter'
# 
#     add_block_to /etc/sysctl.d/k8s.conf            \
#         "# INIT: $(date) #"                        \
#         'net.bridge.bridge-nf-call-iptables  = 1'  \
#         'net.bridge.bridge-nf-call-ip6tables = 1'  \
#         'net.ipv4.ip_forward                 = 1'
# 
#     sysctl --system
# }
#
# pac_install helm

if false; then
  pac_install gpick 
  pac_install mate-control-center 
  pac_install mupdf 
  pac_install netsniff-ng 
  pac_install nwg-icon-picker 
  pac_install openresolv 
  pac_install openswan 
  pac_install qpwgraph
  pac_install speedtest-cli 
  pac_install udisks2 
  pac_install wl-clipboard 
  pac_install xl2tpd 
  pac_install xpdf 
  pac_install youtube-dl 
fi

if false; then
  # other
  pac_install postgresql
  aur_install paperless-ngx
fi

if [[ -f ./baseline.d/baseline-$(uname -n) ]]
then
    source ./baseline.d/baseline-$(uname -n)
fi

sudo pacman -Syu --noconfirm --needed
