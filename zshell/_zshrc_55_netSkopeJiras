#! /bin/zsh
#
# prereqs:
#   brew install go-jira
#   go install github.com/ankitpokhrel/jira-cli/cmd/jira@latest
#

alias ji=~/go/bin/jira

jf() {
    JQF=
    ORD=" order by created"
    while getopts :a:e:l:p:r:s:t:u:xA:R:S: arg ; do
        case $arg in
            a)  JQF+=" AND assignee in ( $OPTARG )" ;;
	    e)  JQF+=" AND ( key = $OPTARG or parent in ( $OPTARG ) )" ;;
            l)	JQF+=" AND labels in ( $OPTARG )" ;;
            p)	JQF+=" AND project = $OPTARG" ;;
            r)  JQF+=" AND reporter in ( $OPTARG )" ;;
            s)  case $OPTARG in
                all-open)   jstatus='Backlog, OPEN, Reopened, "TO Do", "In Progress"';;
                backlog)    jstatus='Backlog' ;;
                moving)     jstatus='"To Do", "In Progress"';;
                todo)       jstatus='"To Do"';;
                inprogress) jstatus='"In Progress"';;
                *)          jstatus="$OPTARG";
                esac
                JQF+=" AND status in ( $jstatus )" ;;
            t)  JQF+=" AND issuetype = $OPTARG" ;;
            u)  JQF+=" AND updated $OPTARG" ;;
            x)  ORD= ;;
	        A)	JQF+=" AND assignee=$OPTARG" ;;
	        R)	JQF+=" AND reporter=$OPTARG" ;;
	        S)	JQF+=" AND sprint in ${OPTARG}" ;;
            \?) echo "Unknown filter type: $OPTARG" ;
	        typeset -f "$0"
		;;
        esac
    done
    printf "%s%s" "${JQF/ AND /}" "$ORD"
}

#
# These zshisms expand globally.
#
alias -g .obs="-p OBS"
alias -g .open="-s all-open"
alias -g .backlog="-s backlog"
alias -g .epic="-t epic"
alias -g .ng="-l new-obs-repo"
alias -g .upd="-u '>='"
alias -g .cs='-S "openSprints()"'
alias -g .fs='-S "futureSprints()"'
alias -g .mine="-A 'currentuser()'"
alias -g .rmine="-R 'currentuser()'"

# alias new-obs-repo-all='jira list -q "$(jf .obs .open .ng) DESC" -t obs-list'
# alias new-obs-repo-epics='jira list -q "$(jf .obs .open .epic .ng) DESC" -t obs-list'

#
# Can this be done with a slack cli app?
#
spr() {
  SIZE="$(echo "$1" | tr '[:lower:]' '[:upper:]')"
  PRID=$2
  # shellcheck disable=SC2016
  printf '`PR/%s` %s %s\n' "$SIZE"                             \
         "$(gh pr view --json title --jq '.title' "$PRID")"    \
         "$(gh pr view --json url   --jq '.url'   "$PRID")"
}
